buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        // noinspection DifferentKotlinGradleVersion
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:+"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'

version = "2.1.1"
group = "therealfarfetchd.quacklib"
archivesBaseName = "quacklib"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}
compileKotlin {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.0.2501"
    runDir = "run"
    mappings = "snapshot_20171120"
}

repositories {
    jcenter()
    maven {
        url "https://modmaven.k-4u.nl/"
    }
    maven {
        url "http://maven.shadowfacts.net/"
    }
}

dependencies {
    compile projectOrMvnD(":mcmultipart", "MCMultiPart2:MCMultiPart-exp:2.4.1_60")
    runtime "mezz.jei:jei_${mc_version}:${jei_version}"
    deobfProvided "mezz.jei:jei_${mc_version}:${jei_version}:api"
    compile 'net.shadowfacts:Forgelin:+'
}

def projectOrMvnD(String project, String artifact) {
    Project p = findProject(project)
    if (p != null)
        dependencies { compile p }
    else
        dependencies { deobfCompile artifact }
    []
}

def projectOrMvn(String project, String artifact) {
    findProject(project) ?: artifact
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
